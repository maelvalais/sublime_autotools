---
$schema: https://cdn.rawgit.com/martinring/tmlanguage/master/tmlanguage.json
scopeName: source.makefile2
fileTypes:
  - GNUmakefile
  - makefile
  - Makefile
  - OCamlMakefile
  - make
  - mk
name: Makefile
repository:
  escaped-char:
    name: constant.character.escape.makefile
    match: \\.
    patterns: []

  variable-reference:
    begin: \$\(
    end: \)
    captures: { 0: { name: string.interpolated.makefile } }
    contentName: variable.other.makefile
    patterns:
      - include: "$self"
      - name: string.other.substitution.makefile
        match: (:)[a-zA-Z0-9_%.]+(=)[a-zA-Z0-9_%.]+
        captures:
          "1": { name: keyword.operator.substitution.makefile }
          "2": { name: keyword.operator.substitution.makefile }
      - name: support.function.makefile
        match: (?<=\$\()(addprefix|addsuffix|and|basename|call|dir|error|eval|file|filter|filter-out|findstring|firstword|flavor|foreach|guile|if|info|join|notdir|or|origin|patsubst|shell|sort|strip|subst|suffix|value|warning|wildcard|word|words)\b
      - name: meta.scope.function.makefile
        begin: (?<=\$\()(addprefix|addsuffix|and|basename|call|dir|error|eval|file|filter|filter-out|findstring|firstword|flavor|foreach|guile|if|info|join|notdir|or|origin|patsubst|shell|sort|strip|subst|suffix|value|warning|wildcard|word|words)\b
        end: (?=\))
        contentName: string.interpolated.makefile
        patterns:
          - include: "$self"

  automatic-variable:
    name: variable.language.makefile
    match: \$([@%<?^+*]|\([@*%<^?][DF]\))
    patterns: []

  shell-variable-reference:
    begin: \$\{
    end: \}
    contentName: variable.other.shell.makefile
    patterns: []

  simple-variable:
    name: variable.other.shell.makefile
    match: \$\$?\w+
    patterns: []

  variables:
    patterns:
      - include: "#shell-variable-variable"
      - include: "#variable-reference"
      - include: "#simple-variable"

  double-quoted-string:
    name: string.quoted.double.makefile
    begin: \"
    end: \"
    patterns:
      - include: "#escaped-char"

  single-quoted-string:
    name: string.quoted.single.makefile
    begin: "'"
    end: "'"
    patterns:
      - include: "#escaped-char"

  backtick-subshell:
    begin: "`"
    end: "`"
    name: string.interpolated.backtick.makefile
    patterns:
      - include: source.shell
      - include: "#variable-reference"

  comment:
    name: comment.line.number-sign.makefile
    begin: "#"
    beginCaptures:
      "0": { name: punctuation.definition.comment.makefile }
    end: $\n?
    patterns:
      - match: (?<!\\)\\$\n
        name: punctuation.separator.continuation.makefile

  assignment:
    name: meta.assignment.makefile
    begin: ^([a-zA-Z_][a-zA-Z0-9_]*)\s*([\+\?:]?=)
    beginCaptures:
      "1": { name: variable.other.makefile }
      "2": { name: keyword.operator.assignment.makefile }
    end: (?<!\\)\n$
    patterns:
      - include: "#automatic-variable"
      - include: "#variables"
      - include: "#escaped-char"
      - include: "#double-quoted-string"
      - include: "#single-quoted-string"
      - include: "#backtick-subshell"

  rule:
    name: meta.rule.makefile
    begin: '^([^\t\:][^\:]*)\:'
    end: ^(?!\t)
    beginCaptures:
      "1":
        name: meta.rule.target.makefile
        # nameContent: entity.name.function.rule.makefile
        patterns: []
    patterns:
      - name: meta.rule.prerequisites.makefile
        begin: "(?<=:)(?=.)"
        end: ;|\n
        patterns:
          - include: "#variable-reference"
          - include: "#automatic-variable"
      - include: "#automatic-variable"
      - include: "#variable-reference"
      - include: source.shell

  rule2:
    name: meta.scope.target.makefile
    begin: ^(?!\t)([^:]*)(:)(?!\=)
    beginCaptures:
      "1":
        patterns:
          - captures:
              "1":
                name: support.function.target.$1.makefile
            match: ^\s*(\.(PHONY|SUFFIXES|DEFAULT|PRECIOUS|INTERMEDIATE|SECONDARY|SECONDEXPANSION|DELETE_ON_ERROR|IGNORE|LOW_RESOLUTION_TIME|SILENT|EXPORT_ALL_VARIABLES|NOTPARALLEL|ONESHELL|POSIX))\s*$
          - begin: "(?=\\S)"
            end: "(?=\\s|$)"
            name: entity.name.function.target.makefile
            patterns:
              - include: "#variables"
              - match: "%"
                name: constant.other.placeholder.makefile
      "2":
        name: punctuation.separator.key-value.makefile
    end: '[^\\]$'
    patterns:
      - begin: \G
        end: (?=[^\\])$
        name: meta.scope.prerequisites.makefile
        patterns:
          - match: \\\n
            name: constant.character.escape.continuation.makefile
          - match: '%|\*'
            name: constant.other.placeholder.makefile
          - include: "#comment"
          - include: "#variables"

  recipe:
    name: meta.scope.recipe.makefile
    begin: ^\t
    end: ^(?=[^\t])
    patterns:
      - captures:
          "0":
            patterns:
              - match: \\\n
                name: constant.character.escape.continuation.makefile
              - include: "#variables"
              - include: source.shell
        match: .+\n?

patterns:
  - include: "#comment"
  - include: "#assignment"
  # - include: "#rule"
  - include: "#rule2"
  - include: "#recipe"
  - match: ^(\-??include|if|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)\b
    name: keyword.control.makefile
  - include: "#variables"

uuid: FF1825E8-6B1C-11D9-B883-000D93589AF6
