<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>$schema</key>
    <string>~/prog/schema-tmlanguage.json</string>
    <key>scopeName</key>
    <string>source.makefile2</string>
    <key>fileTypes</key>
    <array>
      <string>GNUmakefile</string>
      <string>makefile</string>
      <string>Makefile</string>
      <string>OCamlMakefile</string>
      <string>make</string>
      <string>mk</string>
    </array>
    <key>name</key>
    <string>Makefile</string>
    <key>repository</key>
    <dict>
      <key>escaped-char</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.makefile</string>
        <key>match</key>
        <string>\\.</string>
        <key>patterns</key>
        <array/>
      </dict>
      <key>variable-reference</key>
      <dict>
        <key>begin</key>
        <string>\$\(</string>
        <key>end</key>
        <string>\)</string>
        <key>captures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.interpolated.makefile</string>
          </dict>
        </dict>
        <key>contentName</key>
        <string>variable.other.makefile</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.other.substitution.makefile</string>
            <key>match</key>
            <string>(:)[a-zA-Z0-9_%.]+(=)[a-zA-Z0-9_%.]+</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.substitution.makefile</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.substitution.makefile</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>support.function.makefile</string>
            <key>match</key>
            <string>(?&lt;=\$\()(addprefix|addsuffix|and|basename|call|dir|error|eval|file|filter|filter-out|findstring|firstword|flavor|foreach|guile|if|info|join|notdir|or|origin|patsubst|shell|sort|strip|subst|suffix|value|warning|wildcard|word|words)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.scope.function.makefile</string>
            <key>begin</key>
            <string>(?&lt;=\$\()(addprefix|addsuffix|and|basename|call|dir|error|eval|file|filter|filter-out|findstring|firstword|flavor|foreach|guile|if|info|join|notdir|or|origin|patsubst|shell|sort|strip|subst|suffix|value|warning|wildcard|word|words)\b</string>
            <key>end</key>
            <string>(?=\))</string>
            <key>contentName</key>
            <string>string.interpolated.makefile</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>automatic-variable</key>
      <dict>
        <key>name</key>
        <string>variable.language.makefile</string>
        <key>match</key>
        <string>\$([@%&lt;?^+*]|\([@*%&lt;^?][DF]\))</string>
        <key>patterns</key>
        <array/>
      </dict>
      <key>shell-variable-reference</key>
      <dict>
        <key>begin</key>
        <string>\$\{</string>
        <key>end</key>
        <string>\}</string>
        <key>contentName</key>
        <string>variable.other.shell.makefile</string>
        <key>patterns</key>
        <array/>
      </dict>
      <key>simple-variable</key>
      <dict>
        <key>name</key>
        <string>variable.other.shell.makefile</string>
        <key>match</key>
        <string>\$\$?\w+</string>
        <key>patterns</key>
        <array/>
      </dict>
      <key>variables</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#shell-variable-variable</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-reference</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#simple-variable</string>
          </dict>
        </array>
      </dict>
      <key>double-quoted-string</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.makefile</string>
        <key>begin</key>
        <string>\"</string>
        <key>end</key>
        <string>\"</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#escaped-char</string>
          </dict>
        </array>
      </dict>
      <key>single-quoted-string</key>
      <dict>
        <key>name</key>
        <string>string.quoted.single.makefile</string>
        <key>begin</key>
        <string> end: </string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#escaped-char</string>
          </dict>
        </array>
      </dict>
      <key>backtick-subshell</key>
      <dict>
        <key>begin</key>
        <string>`</string>
        <key>end</key>
        <string>`</string>
        <key>name</key>
        <string>string.interpolated.backtick.makefile</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>source.shell</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-reference</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>name</key>
        <string>comment.line.number-sign.makefile</string>
        <key>begin</key>
        <string>#</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.makefile</string>
          </dict>
        </dict>
        <key>end</key>
        <string>$\n?</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?&lt;!\\)\\$\n</string>
            <key>name</key>
            <string>punctuation.separator.continuation.makefile</string>
          </dict>
        </array>
      </dict>
      <key>assignment</key>
      <dict>
        <key>name</key>
        <string>meta.assignment.makefile</string>
        <key>begin</key>
        <string>^([a-zA-Z_][a-zA-Z0-9_]*)\s*([\+\?:]?=)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.other.makefile</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.makefile</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;!\\)\n$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#automatic-variable</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#escaped-char</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#double-quoted-string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#single-quoted-string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#backtick-subshell</string>
          </dict>
        </array>
      </dict>
      <key>rule</key>
      <dict>
        <key>name</key>
        <string>meta.rule.makefile</string>
        <key>begin</key>
        <string>^([^\t\:][^\:]*)\:</string>
        <key>end</key>
        <string>^(?!\t)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.rule.target.makefile</string>
            <key>patterns</key>
            <array/>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.rule.prerequisites.makefile</string>
            <key>begin</key>
            <string>(?&lt;=:)(?=.)</string>
            <key>end</key>
            <string>;|\n</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#variable-reference</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#automatic-variable</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#automatic-variable</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-reference</string>
          </dict>
          <dict>
            <key>include</key>
            <string>source.shell</string>
          </dict>
        </array>
      </dict>
      <key>rule2</key>
      <dict>
        <key>name</key>
        <string>meta.scope.target.makefile</string>
        <key>begin</key>
        <string>^(?!\t)([^:]*)(:)(?!\=)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>support.function.target.$1.makefile</string>
                  </dict>
                </dict>
                <key>match</key>
                <string>^\s*(\.(PHONY|SUFFIXES|DEFAULT|PRECIOUS|INTERMEDIATE|SECONDARY|SECONDEXPANSION|DELETE_ON_ERROR|IGNORE|LOW_RESOLUTION_TIME|SILENT|EXPORT_ALL_VARIABLES|NOTPARALLEL|ONESHELL|POSIX))\s*$</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>(?=\S)</string>
                <key>end</key>
                <string>(?=\s|$)</string>
                <key>name</key>
                <string>entity.name.function.target.makefile</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#variables</string>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>%</string>
                    <key>name</key>
                    <string>constant.other.placeholder.makefile</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.key-value.makefile</string>
          </dict>
        </dict>
        <key>end</key>
        <string>[^\\]$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\G</string>
            <key>end</key>
            <string>(?=[^\\])$</string>
            <key>name</key>
            <string>meta.scope.prerequisites.makefile</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\\\n</string>
                <key>name</key>
                <string>constant.character.escape.continuation.makefile</string>
              </dict>
              <dict>
                <key>match</key>
                <string>%|\*</string>
                <key>name</key>
                <string>constant.other.placeholder.makefile</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#variables</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>recipe</key>
      <dict>
        <key>name</key>
        <string>meta.scope.recipe.makefile</string>
        <key>begin</key>
        <string>^\t</string>
        <key>end</key>
        <string>^(?=[^\t])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>match</key>
                    <string>\\\n</string>
                    <key>name</key>
                    <string>constant.character.escape.continuation.makefile</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#variables</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>source.shell</string>
                  </dict>
                </array>
              </dict>
            </dict>
            <key>match</key>
            <string>.+\n?</string>
          </dict>
        </array>
      </dict>
    </dict>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#assignment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#rule2</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#recipe</string>
      </dict>
      <dict>
        <key>match</key>
        <string>^(\-??include|if|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)\b</string>
        <key>name</key>
        <string>keyword.control.makefile</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#variables</string>
      </dict>
    </array>
    <key>uuid</key>
    <string>FF1825E8-6B1C-11D9-B883-000D93589AF6</string>
  </dict>
</plist>